{
  "Id": "8a127da4-0251-4e67-8f85-5a346e49ed91",
  "Name": "Optimizely DXP - Complete deploy",
  "Description": "Complete deploy in specified environment. Environment status must be in AwaitingVerification status. (Optimizely DXP, former Episerver DXC)",
  "ActionType": "Octopus.Script",
  "Version": 1,
  "CommunityActionTemplateId": null,
  "Packages": [
    {
      "PackageId": "EpiCloud",
      "FeedId": "feeds-builtin",
      "AcquisitionLocation": "Server",
      "Properties": {
        "Extract": "True",
        "SelectionMode": "immediate"
      },
      "Id": "d1a1cd57-9688-460d-89e7-756c4c5278fa",
      "Name": "EpiCloud"
    },
    {
      "PackageId": "EpinovaDxpToolBucket",
      "FeedId": "feeds-builtin",
      "AcquisitionLocation": "Server",
      "Properties": {
        "Extract": "True",
        "SelectionMode": "immediate"
      },
      "Id": "8ad88a06-be29-433a-a268-0e6bc84e372e",
      "Name": "EpinovaDxpToolBucket"
    }
  ],
  "Properties": {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "try {\n    $runVerbose = [System.Convert]::ToBoolean($RunVerbose)\n\n\t#Uninstall-Module -Name EpiCloud -AllVersions -Force\n\t#Uninstall-Module -Name \"EpinovaDxpToolBucket\" -AllVersions -Force\n    Install-Module -Name \"EpinovaDxpToolBucket\" -MinimumVersion 0.13.0 -Force\n    $module = Get-Module -Name \"EpinovaDxpToolBucket\" -ListAvailable | Select-Object Version\n    $moduleVersion = \"v$($module.Version.Major).$($module.Version.Minor).$($module.Version.Build)\"\n    Write-Host \"EpinovaDxpToolBucket: $moduleVersion\"\n    \n    Invoke-DxpCompleteDeploy -ClientKey $ClientKey -ClientSecret $ClientSecret -ProjectId $ProjectId -TargetEnvironment $TargetEnvironment -Timeout $Timeout -RunVerbose $runVerbose\n    ####################################################################################\n    Write-Host \"---THE END---\"\n}\ncatch {\n    Write-Verbose \"Exception caught from task: $($_.Exception.ToString())\"\n    throw\n}\n\nif ($runVerbose){\n    ## To Set Verbose output\n    $PSDefaultParameterValues['*:Verbose'] = $false\n}"
  },
  "Parameters": [
    {
      "Id": "38de1473-178c-40d0-9387-e379150abece",
      "Name": "ClientKey",
      "Label": "ClientKey",
      "HelpText": "The DXP API ClientKey for the current environment. This ClientKey can be generated in the Optimizely paas portal.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "49b8845b-adc2-48a8-9b8b-0c008d470cb0",
      "Name": "ClientSecret",
      "Label": "ClientSecret",
      "HelpText": "The DXP API ClientSecret for the current environment.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "c69e0df7-5fb5-46ba-8004-a2fb3e91c9da",
      "Name": "ProjectId",
      "Label": "ProjectId",
      "HelpText": "The DXP project id. Can be found in the Optimizely paas portal under API tab.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "2f954658-a22d-4d2d-9994-27f8d28dbef8",
      "Name": "TargetEnvironment",
      "Label": "TargetEnvironment",
      "HelpText": "Specify which environment that you want to check ex Integration/Preproduction/Production.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "Integration|Integration\nPreproduction|Preproduction\nProduction|Production\nADE1|ADE1\nADE2|ADE2\nADE3|ADE3"
      }
    },
    {
      "Id": "2aa7b4bc-edb3-4f9e-b367-ecfbb7f0c110",
      "Name": "Timeout",
      "Label": "Timeout",
      "HelpText": "Specify the number of seconds when the task should timeout.",
      "DefaultValue": "1800",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "78158d35-de37-4c2d-9d13-686562085db0",
      "Name": "RunVerbose",
      "Label": "RunVerbose",
      "HelpText": "If you want to run in Verbose mode and see all verbose messages.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    }
  ],
  "$Meta": {
    "ExportedAt": "2023-11-23T10:03:28.978Z",
    "OctopusVersion": "2020.3.4",
    "Type": "ActionTemplate"
  },
  "LastModifiedBy": "Your GitHub Username",
  "Category": "other"
}