{
    "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
    "id": "908f312f-0aad-46db-8681-042dbf1fd304",
    "name": "DxpExpectStatus",
    "friendlyName": "Expect status (Optimizely DXP)",
    "description": "Expect status on specified environment. (Optimizely DXP, former Episerver DXC)",
    "helpUrl": "https://github.com/Epinova/epinova-dxp-deployment/blob/master/documentation/ExpectStatus.md",
    "helpMarkDown": "[Extension page](https://marketplace.visualstudio.com/items?itemName=epinova-sweden.epinova-dxp-deploy-extension)[Learn more about this task](https://github.com/Epinova/epinova-dxp-deployment/blob/master/documentation/ExpectStatus.md)",
    "category": "Deploy",
    "visibility": [
        "Release"
    ],
    "author": "Ove Lartelius",
    "version": {
        "Major": 2,
        "Minor": 13,
        "Patch": 0
    },
    "groups": [
        {
            "name": "Settings",
            "displayName": "Script settings",
            "isExpanded": true
        },
        {
            "name": "Timeout",
            "displayName": "Timeout",
            "isExpanded": false
        },
        {
            "name": "Benchmark",
            "displayName": "Benchmark",
            "isExpanded": false
        },
        {
            "name": "ErrorHandlingOptions",
            "displayName": "Error handling options",
            "isExpanded": false
        }
    ],
    "releaseNotes": "v2.13.0: EPiCloud v1.9\r\nv2.12.0: EPiCloud v1.8\r\nv2.11.4: Updated min agent version to v3.232.1 because of Node v20.1\r\nv2.11.2: Use Node v20\r\nv2.10.0: EPiCloud v1.7\r\nv2.9.0: EPiCloud v1.3\r\nv2.7.0: Run benchmark.\r\nv2.6.0: Context info.\r\nv2.4.0: RunVerbose.\r\nv2.3.0 Additional Development Environment support",
    "minimumAgentVersion": "3.232.1",
    "inputs": [
        {
            "name": "ClientKey",
            "type": "string",
            "label": "DXP target environment ClientKey",
            "required": true,
            "defaultValue": "$(ClientKey)",
            "helpMarkDown": "The DXP project ClientKey. Generated in the PAAS interface.",
            "groupName": "Settings"
        },
        {
            "name": "ClientSecret",
            "type": "string",
            "label": "DXP target environment ClientSecret",
            "required": true,
            "defaultValue": "$(ClientSecret)",
            "helpMarkDown": "The DXP project ClientSecret. Generated in the PAAS interface.",
            "groupName": "Settings"
        },
        {
            "name": "ProjectId",
            "type": "string",
            "label": "Project Id",
            "required": true,
            "defaultValue": "$(DXP.ProjectId)",
            "helpMarkDown": "The DXP ProjectId (GUID). Look in the URL when in PAAS for your project. You will see the GUID as part of the URL.",
            "groupName": "Settings"
        },
        {
            "name": "TargetEnvironment",
            "type": "pickList",
            "label": "Target environment",
            "required": true,
            "defaultValue": "$(TargetEnvironment)",
            "helpMarkDown": "The environment that you you want to start the deploy to.",
            "groupName": "Settings",
            "options": {
                "Integration": "Integration",
                "Preproduction": "Preproduction",
                "Production": "Production",
                "ADE1": "ADE1",
                "ADE2": "ADE2",
                "ADE3": "ADE3",
                "ADE4": "ADE4",
                "ADE5": "ADE5",
                "ADE6": "ADE6"
            }
        },
        {
            "name": "ExpectedStatus",
            "type": "pickList",
            "label": "Expected status",
            "required": true,
            "defaultValue": "AwaitingVerification",
            "helpMarkDown": "The status that you expect the environment to have.",
            "groupName": "Settings",
            "options": {
                "AwaitingVerification": "AwaitingVerification",
                "InProgress": "InProgress",
                "Resetting": "Resetting",
                "Reset": "Reset",
                "Succeeded": "Succeeded",
                "SucceededOrReset": "Succeeded or Reset"
            }
        },
        {
            "name": "Timeout",
            "type": "int",
            "label": "Script timeout (in seconds)",
            "required": true,
            "defaultValue": "1800",
            "helpMarkDown": "The timeout for the script.",
            "groupName": "Timeout"
        },
        {
            "name": "RunBenchmark",
            "type": "boolean",
            "label": "Run benchmark",
            "required": true,
            "defaultValue": "false",
            "helpMarkDown": "If you want to send information about your execution, to get benchmark data back.\r\n If you are interested of more benchmark data you can contact Epinova.\r\nBy using this function you agree with sending over the following information: Task, TaskVersion, Environment, TargetEnvironment, DxpProjectId, OrganisationId, OrganisationName, ProjectId, ProjectName, Branch, AgentOS, EpiCloudVersion, PowerShellVersion, PowerShellEdition, Elapsed, Result, CmsFileSize, CmsPackageName, CommerceFileSize, CommercePackageName",
            "groupName": "Benchmark"
        },
        {
            "name": "RunVerbose",
            "type": "boolean",
            "label": "Run Verbose",
            "required": true,
            "defaultValue": "false",
            "helpMarkDown": "If you want to run in verbose mode and see all information.",
            "groupName": "ErrorHandlingOptions"
        },
        {
            "name": "ErrorActionPreference",
            "type": "pickList",
            "label": "ErrorActionPreference",
            "required": false,
            "defaultValue": "stop",
            "options": {
                "stop": "Stop",
                "continue": "Continue",
                "silentlyContinue": "SilentlyContinue"
            },
            "helpMarkDown": "Prepends the line `$ErrorActionPreference = 'VALUE'` at the top of your script.",
            "groupName": "ErrorHandlingOptions"
        }
    ],
    "instanceNameFormat": "Expect status $(ExpectedStatus) on $(TargetEnvironment)",
    "execution": {
        "Node20_1": {
            "target": "ExpectStatus.js"
        }
    }
}